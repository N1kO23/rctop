name: Build rctop

on: [push, pull_request, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release;cp target/release/rctop .
    - name: Run tests
      run: cargo test --verbose --release
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: rctop artifact
        path: rctop

  release:
        name: "Release Build"
        runs-on: ubuntu-latest
        needs: build
        steps:
          
          # Yes we get the repo again but only for the version in the package.json
          - name: Checkout
            uses: actions/checkout@v2
          - name: Set Version Variable
            run: >
              echo "::set-output name=version::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"
            id: version

          # Download the artifacts
          - name: Download Binaries
            uses: actions/download-artifact@v2
            with:
              name: rctop artifact
              path: ./

          # The release script that prepares a new Github release
          - name: Create Release
            uses: actions/create-release@v1
            id: create_release
            continue-on-error: true
            with:
              draft: false
              prerelease: false
              release_name: ${{ steps.version.outputs.version }}
              tag_name: ${{ steps.version.outputs.version }}
            env:
              GITHUB_TOKEN: ${{ github.token }}

          # Upload artifacts to the release
          - name: Upload Linux Artifact
            uses: actions/upload-release-asset@v1
            continue-on-error: true
            env:
              GITHUB_TOKEN: ${{ github.token }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./
              asset_name: rctop.v${{ steps.version.outputs.version }}
              asset_content_type: application/octet-stream