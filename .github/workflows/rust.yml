name: Build rctop

on: [push, pull_request, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always
  UPLOAD_URL: ""
  VERSION: ""

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose --release
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: rctop_compiled_linux
        path: target/release/rctop

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose --release
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: rctop_compiled_windows
        path: target/release/rctop.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose --release
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: rctop_compiled_macos
        path: target/release/rctop
    

  create-release:
    name: "Create Release"
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    strategy:
      matrix: 
       targetPlatform:
          - windows
          - linux
          - macos
      fail-fast: false
    steps:
      
      # Yes we get the repo again but only for the version in the package.json
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Version Variable
        run: >
          echo "::set-output name=VERSION::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"

      # Download the artifacts
      - name: Download ${{matrix.targetPlatform}} Binaries
        uses: actions/download-artifact@v2
        with:
          name: rctop_compiled_${{matrix.targetPlatform}}
          path: ${{matrix.targetPlatform}}_build
      
      # The release script that prepares a new Github release
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        continue-on-error: true
        with:
          draft: false
          prerelease: false
          release_name: rctop v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Set upload URL
        run:  echo "::set-output name=UPLOAD_URL::${{steps.create_release.outputs.upload_url}}"

  upload: 
    name: "Upload Builds"
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix: 
       targetPlatform:
          - windows
          - linux
          - macos
      fail-fast: false
    steps:
      - name: Upload ${{matrix.targetPlatform}} Artifact
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{matrix.targetPlatform}}_build/${{ matrix.targetPlatform == 'windows' && 'rctop.exe' || 'rctop' }}
          asset_name: rctop.${{matrix.targetPlatform}}.v${{ env.VERSION }}
          asset_content_type: application/octet-stream